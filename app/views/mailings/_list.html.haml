%table.table.table-striped
  - old_created_on = nil
  - case_count = 0
  - doctor_count = 0
  - for mailing in collection
    - # group header 'created_on'
    - created_on = mailing.created_at.to_date
    - is_header = !(created_on == old_created_on)
    - is_first_header = old_created_on.nil?
    - case_count += mailing.cases.count
    - doctor_count += 1
    - if is_header
      - unless is_first_header
        %tr.group_footer
          %td Total
          %td{:style => "text-align: right"}= case_count
          %td
            fÃ¼r #{doctor_count} &Auml;rzte
          %td
          %td
      %tr.group_header
        %th{:style => "width: 12em", :title => mailing.created_at.strftime('am %d.%m.%Y um %H:%M')}
          = h mailing.created_at.strftime('%a %d. %b')
        %th{:style => "width: 5em; text-align: right"} Anzahl
        %th Arzt
        %th Gesendet am
        %th
    %tr.group_body[mailing]
      %td
      %td{:style => "text-align: right"}= link_to mailing.cases.count, mailing
      %td= mailing.doctor.nil? ? "Unbekannt" : "#{mailing.doctor.name}"
      %td
        - for send_queue in mailing.send_queues
          %p
            = channel_label(send_queue.channel)
            = send_queue.sent_at.nil? ? "ready to send" : send_queue.sent_at.to_date
      %td
        = link_to "Freigeben", send_by_all_channels_mailing_path(mailing), :method => :post, :remote => true, :class => 'btn' if mailing.send_queues.unsent.empty?
        %br/
    - old_created_on = created_on
    - case_count = 0 if is_header
    - doctor_count = 0 if is_header
