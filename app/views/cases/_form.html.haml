= simple_form_for resource do |f|
  .row-fluid
    .span6
      = link_to image_tag(inline_order_form_url(@case.order_form)), resource.order_form if resource.order_form

    .span6
      %h3= t_action(:assign)
      .row-fluid
        .span6= f.input :praxistar_eingangsnr
      .row-fluid
        .span6= f.input :examination_date, :as => :string
      .row-fluid
        .span6= f.input :entry_date, :as => :string
      .row-fluid
        .span6= f.association :doctor, :as => :select, :collection => doctors_collection, :input_html => {'data-placeholder' => 'Arzt auswählen', :class => 'select2'}

      .control-group
        %label.control-label= t_attr(:case_copy_tos)
        .controls
          = render 'case_copy_tos/list', :a_case => resource, :collection => resource.case_copy_tos
      .row-fluid
        .span6= f.association :examination_method

      %h3= t_action(:first_entry)
      .row-fluid
        .span6= f.input :patient_id, :input_html => {'data-placeholder' => 'Patient auswählen', :class => 'patient-select2'}

      %h3= t_action(:second_entry)
      .row-fluid
        .span12= f.association :screener, :collection => Employee.all, :input_html => {'data-placeholder' => 'Befund erfasst von?', :class => 'select2'}
      .row-fluid
        .span12= f.association :reviewer, :collection => Employee.by_role(:doctor), :input_html => {'data-placeholder' => 'Unterzeichner auswählen', :class => 'select2'}
      .row-fluid
        .span12= f.association :classification, :input_html => {'data-placeholder' => 'Klassifikation auswählen', :class => 'select2'}
      .row-fluid
        .span12= f.input :finding_text, :input_html => {:class => 'span12 tinymce'}

  .form-actions
    = f.button :submit

- configuration = TinyMCE::Rails.configuration
:javascript
  $(document).ready(function() {
    tinyMCE.init(#{configuration.options_for_tinymce.to_json});
  })

:javascript
  $('.patient-select2').select2({
    placeholder: 'Patient auswählen',
    minimumLength: 3,
    ajax: {
      url: '#{patients_url(:format => 'json')}',
      quietMillis: 500,
      data: function(term, page) {
        return {
          query: term,
          page:   page
        }
      },
      results: function(data, page) {
        return {results: data}
      }
    },
    initSelection: function(element, callback) {
      callback({
        id: '#{resource.patient.try(:id)}',
        text: '#{resource.patient.try(:to_s)}'
      });
    }
  })
