.row-fluid
  = render "finding_form"

= simple_form_for @case, :url => second_entry_update_case_path(@case) do |f|
  .row-fluid
    .span12
      = f.input :finding_text, :wrapper => :inline, :input_html => {:rows =>20, :class => "span12 tinymce"}

  .form-actions
    = button_tag :submit, :value => :save, :class => 'span2 btn btn-big' do
      = t_action(:save)
    - if can?(:sign, @case) && cannot?(:review_done, @case)
      = button_tag :submit, :value => :queue_for_review, :class => 'span2 btn btn-big btn-primary' do
        = t_action(:sign)
    - if can?(:review_done, @case)
      = button_tag :submit, :value => :queue_for_review, :class => 'span2 btn btn-big btn-primary' do
        = t_action(:queue_for_review)
      = button_tag :submit, :value => :review_done, :class => 'span2 btn btn-big btn-primary' do
        = t_action(:review_done)


    = f.button :submit, "P16", :class => 'span2 btn-big' if current_tenant.settings['modules.p16']
    = f.button :submit, "P16+HPV", :class => 'span2 btn-big' if current_tenant.settings['modules.p16']

  .row-fluid
    .span12
      .span6
        = link_to image_tag(inline_order_form_url(@case.order_form, :type => :result_remarks), :size => "680x305"), order_form_path(@case.order_form), :remote => true
      .span6
        .row-fluid
          .span6= f.association :doctor, :as => :select, :collection => doctors_collection, :required => true, :input_html => {'data-placeholder' => 'Arzt auswählen', :class => 'select2'}
        .row-fluid
          .control-group
            %label.control-label= t_attr(:case_copy_tos)
            .controls
              = render 'case_copy_tos/list', :a_case => resource, :collection => resource.case_copy_tos
        .row-fluid
          .span12= f.association :classification, :required => true, :input_html => {'data-placeholder' => 'Klassifikation auswählen', :class => 'select2'}
        .row-fluid
          .span12= f.input :remarks, :input_html => {:class => 'span12', :rows => 4}

- content_for :sidebar do
  = render 'info'

- configuration = TinyMCE::Rails.configuration
:javascript
  $(document).ready(function() {
    tinyMCE.init(#{configuration.options_for_tinymce.to_json});
  })

